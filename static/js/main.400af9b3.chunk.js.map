{"version":3,"sources":["WaterChild.js","App.js","reportWebVitals.js","index.js"],"names":["WaterChild","className","class","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shape-rendering","id","d","xlinkHref","x","y","fill","App","useState","componentArray","setComponentArray","isDisabledFillBtn","setIsDisabledFillBtn","isDisabledRemoveBtn","setIsDisabledRemoveBtn","type","style","backgroundColor","onClick","length","oldArray","tempArray","lengthOfArray","slice","handleMinus","display","justifyContent","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAkDeA,EA/CI,WACjB,OACE,8BACE,qBAAKC,UAAU,SAAf,SACE,8BACE,sBACEC,MAAM,QACNC,MAAM,6BACNC,WAAW,+BACXC,QAAQ,cACRC,oBAAoB,OACpBC,kBAAgB,OANlB,UAQE,+BACE,sBACEC,GAAG,cACHC,EAAE,+EAGN,oBAAGP,MAAM,WAAT,UACE,qBACEQ,UAAU,eACVC,EAAE,KACFC,EAAE,IACFC,KAAK,yBAEP,qBACEH,UAAU,eACVC,EAAE,KACFC,EAAE,IACFC,KAAK,0BAEP,qBACEH,UAAU,eACVC,EAAE,KACFC,EAAE,IACFC,KAAK,0BAEP,qBAAKH,UAAU,eAAeC,EAAE,KAAKC,EAAE,IAAIC,KAAK,sBCoB/CC,MAzDf,WAAgB,IAAD,EAC+BC,mBAAS,CAAC,cAAC,EAAD,MADzC,mBACNC,EADM,KACUC,EADV,OAEqCF,oBAAS,GAF9C,mBAENG,EAFM,KAEaC,EAFb,OAGyCJ,oBAAS,GAHlD,mBAGNK,EAHM,KAGeC,EAHf,KAqBb,OACE,sBAAKpB,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,wBACEA,UAAU,SACVqB,KAAK,SACLC,MAAO,CAAEC,gBAAiBN,EAAoB,UAAY,WAC1DO,QAAS,WAvBXT,EAAeU,OAAS,IAC1BT,GAAkB,SAACU,GAAD,4BAAkBA,GAAlB,CAA4B,cAAC,EAAD,SAC9CR,GAAqB,GACrBE,GAAuB,KAgBrB,kBAQA,wBACEE,MAAO,CACLC,gBAAiBJ,EAAsB,UAAY,WAErDnB,UAAU,SACVqB,KAAK,SACLG,QAAS,kBA3BG,WAClB,GAAIT,EAAeU,OAAS,EAAG,CAC7B,IAAIE,EAAYZ,EACZa,EAAgBb,EAAeU,OAAS,EAC5CT,EAAkBW,EAAUE,MAAM,EAAGD,IACrCR,GAAuB,GACvBF,GAAqB,IAqBFY,IANjB,uBAWF,qBACE9B,UAAU,QACVsB,MAAO,CACLS,QAAS,OACTC,eAAgB,SAChBC,WAAY,YALhB,SAQE,8BAAMlB,UC3CCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.400af9b3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst WaterChild = () => {\n  return (\n    <div>\n      <div className=\"header\">\n        <div>\n          <svg\n            class=\"waves\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            viewBox=\"0 24 150 28\"\n            preserveAspectRatio=\"none\"\n            shape-rendering=\"auto\"\n          >\n            <defs>\n              <path\n                id=\"gentle-wave\"\n                d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n              />\n            </defs>\n            <g class=\"parallax\">\n              <use\n                xlinkHref=\"#gentle-wave\"\n                x=\"48\"\n                y=\"0\"\n                fill=\"rgba(255,255,255,0.7\"\n              />\n              <use\n                xlinkHref=\"#gentle-wave\"\n                x=\"48\"\n                y=\"3\"\n                fill=\"rgba(255,255,255,0.5)\"\n              />\n              <use\n                xlinkHref=\"#gentle-wave\"\n                x=\"48\"\n                y=\"5\"\n                fill=\"rgba(255,255,255,0.3)\"\n              />\n              <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WaterChild;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport WaterChild from \"./WaterChild\";\n\nfunction App() {\n  const [componentArray, setComponentArray] = useState([<WaterChild />]);\n  const [isDisabledFillBtn, setIsDisabledFillBtn] = useState(false);\n  const [isDisabledRemoveBtn, setIsDisabledRemoveBtn] = useState(true);\n  const handlePlus = () => {\n    if (componentArray.length < 5) {\n      setComponentArray((oldArray) => [...oldArray, <WaterChild />]);\n      setIsDisabledFillBtn(false);\n      setIsDisabledRemoveBtn(true);\n    }\n  };\n  const handleMinus = () => {\n    if (componentArray.length > 0) {\n      let tempArray = componentArray;\n      let lengthOfArray = componentArray.length - 1;\n      setComponentArray(tempArray.slice(0, lengthOfArray));\n      setIsDisabledRemoveBtn(false);\n      setIsDisabledFillBtn(true);\n    }\n  };\n\n  return (\n    <div className=\"parentContainer\">\n      <div className=\"mb50\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          style={{ backgroundColor: isDisabledFillBtn ? \"#275c29\" : \"#4CAF50\" }}\n          onClick={() => handlePlus()}\n        >\n          Fill\n        </button>\n        <button\n          style={{\n            backgroundColor: isDisabledRemoveBtn ? \"#326c80\" : \"#008CBA\",\n          }}\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleMinus()}\n        >\n          Remove\n        </button>\n      </div>\n      <div\n        className=\"glass\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div>{componentArray}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}